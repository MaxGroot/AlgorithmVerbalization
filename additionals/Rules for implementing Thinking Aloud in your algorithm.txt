1) All evaluations must be done on declared variables in memory --> No expressions in your evaluations
2) All variables that are evaluated must have been expressed in their current value in a system state


--- This ensures all variables are known ---
--- But how do you do this? ---

3) If you change a variable --> THINK up an event, with a new state. 
4) If you change the model --> THINK with the event that last changed the system state that you have used, action is your model action, no system state.
5) If you evaluate what you're gonna do next --> THINK with the event that last changed the system event that you have used, action is your algorithm action, system state?


--- Rules for thoughts ---
6) If you use the same system state descriptor, you need the same event. 
7) You're allowed not to supply a System State if you know for certain not a single variable of system state has occured.


-------------- Rules for making expressions ------------------
1) If you use an event, you may only use the variables described in the system state for that event
2) 

---- What do System State Descriptors do? ---- 
  



---- Consequences for thought results -----
1) The same event might result in different actions, but all those actions look at the same system state!!



----- Questions I still have ----
Which variables from a previous system state do you take with you?
