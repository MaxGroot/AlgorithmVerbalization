{
    "inferences": 
    [
        {
            "id"    : "start",
            "action" : "Start",
            "situation": "Program loaded",
            "state_descriptor_id": null
        },
        {
            "id"    : "iterate",
            "action" : "Iterate",
            "situation" : "Ready for iteration",
            "state_descriptor_id" : null
        },
        {
            "id"    : "consider-attribute",
            "action" : "Consider attribute",
            "situation" : "Determining best attribute",
            "state_descriptor_id": null
        },
        {
            "id"        : "propose-competing-attribute",
            "action"    : "Propose competing attribute",
            "situation" : "Comparing attributes",
            "state_descriptor_id" : "comparing-competing-attribute"
        },
        {
            "id"        : "keep-best-attribute",
            "action"    : "Do not change best attribute",
            "situation" : "Comparing attributes",
            "state_descriptor_id" : "comparing-competing-attribute"
        },
        {
            "id"        : "allow-competing-attribute",
            "action"    : "Allow competing attribute",
            "situation" : "Verify competing attribute",
            "state_descriptor_id" : "verify-competing-attribute"
        },
        {
            "id"        : "disregard-competing-attribute",
            "action"    : "Disregard competing attribute",
            "situation" : "Verify competing attribute",
            "state_descriptor_id" : "verify-competing-attribute"
        },
        {
            "id"        : "end-attribute-loop",
            "action"    : "End attribute selection loop",
            "situation" : "Determining best attribute",
            "state_descriptor_id" : null
        },
        {
            "id" : "add-node",
            "action" : "Create node for best attribute",
            "situation" : "Check if best attribute could be found",
            "state_descriptor_id" : null
        },
        {
            "id" : "add-estimation-leaf",
            "action" : "Create estimation leaf for this set",
            "situation" : "Check if best attribute could be found",
            "state_descriptor_id" : null
        },
        {
            "id" : "subset-on-value",
            "action" : "Create subset with this value",
            "situation" : "Considering attribute values",
            "state_descriptor_id" : null
        },
        {
            "id" : "add-leaf",
            "action" : "Add leaf",
            "situation" : "Considering subset",
            "state_descriptor_id" : "considering-subset"
        },
        {
            "id" : "ignore-value",
            "action" : "Ignore value",
            "situation" : "Considering subset",
            "state_descriptor_id" : "considering-subset"
        },
        {
            "id"    : "add-majority-leaf",
            "action" : "Add majority leaf",
            "situation" : "Considering subset",
            "state_descriptor_id" : "considering-subset"
        },
        {
            "id" : "iterate-further",
            "action" : "Iterate further",
            "situation" : "Considering subset",
            "state_descriptor_id" : "considering-subset"
        },
        {
            "id" : "end-value-loop",
            "action": "End subsetting loop",
            "situation" : "Considering attribute values",
            "state_descriptor_id" : null
        },
        {
            "id" : "return-tree-to-self",
            "action" : "Return tree to previous iteration",
            "situation" : "Node has been handled",
            "state_descriptor_id" : null
        },
        {  
            "id" : "prepare-for-pruning",
            "action" : "Prepare for pruning",
            "situation" : "Node has been handled",
            "state_descriptor_id" : null
        },
        {
            "id" : "consider-node-for-pruning",
            "action" : "Consider node for pruning",
            "situation" : "ready-for-prune-iteration",
            "state_descriptor_id" : null
        },
        {
            "id" : "prune-node",
            "action" : "Prune node",
            "situation" : "Consider node for pruning",
            "state_descriptor_id" : "consider-node-for-prune"
        },
        {
            "id" : "keep-node",
            "action" : "Keep node",
            "situation" : "Consider node for pruning",
            "state_descriptor_id" : "consider-node-for-prune"
        },
        {
            "id" : "return-prediction-model",
            "action" : "Return prediction model",
            "situation" : "ready-for-prune-iteration",
            "state_descriptor_id" : null
        }
    ],
    "state_descriptors":
    [
        {
            "id" : "comparing-competing-attribute",
            "considerations" : {
                "current_best_gain" : "double",
                "competing_gain" : "double",
                "current_best_attribute" : "string",
                "competing_attribute" : "string",
                "current_best_threshold" : "nullable_double",
                "competing_threshold" : "nullable_double",
                "parent_id" : "string",
                "parent_attribute" : "string",
                "parent_threshold" : "nullable_double",
                "previous_value_split" : "string"
            }
        },
        {
            "id" : "verify-competing-attribute",
            "considerations" : {
                "minimum_objects" : "int",
                "valid_subset_count" : "int",
                "chosen_attribute" : "string",
                "suggested_threshold" : "nullable_double",
                "parent_id" : "string",
                "parent_attribute" : "string",
                "parent_threshold" : "nullable_double",
                "previous_value_split" : "string"
            }
        },
        {
            "id" : "considering-subset",
            "considerations" : {
                "set_count" : "int",
                "set_has_uniform_classifier" : "string",
                "possible_attribute_count" : "int",
                "chosen_attribute" : "string",
                "value_split" : "string",
                "chosen_threshold" : "nullable_double",
                "current_node_id" : "string",
                "parent_id" : "string",
                "parent_attribute" : "string",
                "parent_threshold" : "nullable_double",
                "previous_value_split" : "string"
            }
        },
        {
            "id" : "consider-node-for-prune",
            "considerations" : {
                "estimated_prune_errors" : "double",
                "estimated_keep_errors" : "double",
                "node_attribute" : "string",
                "node_data_size" : "int",
                "node_id" : "string",
                "node_value_splitter" : "string",
                "node_threshold" : "nullable_double",
                "parent_id" : "string",
                "parent_threshold" : "nullable_double",
                "parent_attribute" : "string"
            }
        }
    ]
}